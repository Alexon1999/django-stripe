# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          cat requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          ls -la .venv/
      - name: Upload venv as artifact
        uses: actions/upload-artifact@v4
        with:
          name: venv
          path: .venv

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Download venv artifact
        uses: actions/download-artifact@v4
        with:
          name: venv
          path: .venv
      - uses: snyk/actions/setup@master
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Snyk monitor
        run: |
          source .venv/bin/activate
          snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Download venv artifact
        uses: actions/download-artifact@v4
        with:
          name: venv
          path: .venv
      - name: Lint with flake8
        run: |
          source .venv/bin/activate
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pip install pytest pytest-django
          pytest tests/ --maxfail=2 --disable-warnings -v
