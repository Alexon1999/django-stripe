# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  jobs:
    build:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Cache pip
          uses: actions/cache@v4
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
            cat requirements.txt
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    security:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Cache pip
          uses: actions/cache@v4
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
            cat requirements.txt
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Snyk SAST (Code Security)
          uses: snyk/actions/python@v1
          with:
            args: --all-projects
          env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    test:
      runs-on: ubuntu-latest
      needs: security
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python 3.10
          uses: actions/setup-python@v3
          with:
            python-version: "3.10"
        - name: Cache pip
          uses: actions/cache@v4
          with:
            path: ~/.cache/pip
            key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
            restore-keys: |
              ${{ runner.os }}-pip-
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install flake8
            cat requirements.txt
            if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        - name: Lint with flake8
          run: |
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        - name: Test with pytest
          run: |
            pytest tests/ --maxfail=2 --disable-warnings -v
